{{- $schemaImage := printf "%s:%s" .Values.argoTemplates.diffBQTable.schemaImageName (default "latest" .Chart.AppVersion) }}
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: process-table
spec:
  templates:
    - name: main
      inputs:
        parameters:
          - name: table-name
          - name: gcs-bucket
          - name: gcs-prefix
          - name: staging-bq-project
          - name: staging-bq-dataset
          - name: jade-bq-project
          - name: jade-bq-dataset
          - name: url
          - name: dataset-id
          - name: timeout
          - name: sa-secret
          - name: sa-secret-key
      dag:
        tasks:
          # 1) diff table
          - name: diff-table
            templateRef:
              name: {{ .Values.argoTemplates.diffBQTable.name }}
              template: main
            arguments:
              parameters:
                - name: table-name
                  value: '{{ "{{inputs.parameters.table-name}}" }}'
                - name: gcs-bucket
                  value: '{{ "{{inputs.parameters.gcs-bucket}}" }}'
                - name: input-prefix
                  value: '{{ "{{inputs.parameters.gcs-prefix}}/processed/{{inputs.parameters.table-name}}" }}'
                - name: old-ids-output-prefix
                  value: '{{ "{{inputs.parameters.gcs-prefix}}/old-ids/{{inputs.parameters.table-name}}" }}'
                - name: new-rows-output-prefix
                  value: '{{ "{{inputs.parameters.gcs-prefix}}/new-rows/{{inputs.parameters.table-name}}" }}'
                - name: staging-bq-project
                  value: '{{ "{{inputs.parameters.staging-bq-project}}" }}'
                - name: staging-bq-dataset
                  value: '{{ "{{inputs.parameters.staging-bq-dataset}}" }}'
                - name: jade-bq-project
                  value: '{{ "{{inputs.parameters.jade-bq-project}}" }}'
                - name: jade-bq-dataset
                  value: '{{ "{{inputs.parameters.jade-bq-dataset}}" }}'
          # 2a) Ingest table
          - name: ingest-table
            dependencies: [diff-table]
            # WHEN there are rows to append, THEN run the ingest task, otherwise don't
            when: '{{ "{{tasks.diff-table.outputs.parameters.rows-to-append-count}} > 0" }}'
            templateRef:
              name:  {{ .Values.argoTemplates.ingestTable.name }}
              template: main
            arguments:
              parameters:
                - name: url
                  value: '{{ "{{inputs.parameters.url}}" }}'
                - name: dataset-id
                  value: '{{ "{{inputs.parameters.dataset-id}}" }}'
                - name: timeout
                  value: '{{ "{{inputs.parameters.timeout}}" }}'
                - name: sa-secret
                  value: '{{ "{{inputs.parameters.sa-secret}}" }}'
                - name: sa-secret-key
                  value: '{{ "{{inputs.parameters.sa-secret-key}}" }}'
                - name: gcs-bucket
                  value: '{{ "{{inputs.parameters.gcs-bucket}}" }}'
                - name: gcs-prefix
                  value: '{{ "{{inputs.parameters.gcs-prefix}}/new-rows/{{inputs.parameters.table-name}}" }}'
                - name: table-name
                  value: '{{ "{{inputs.parameters.table-name}}" }}'
          # 2b) Soft-delete table
          - name: soft-delete-table
            dependencies: [diff-table]
            # Only when there are rows to soft-delete
            when: '{{ "{{tasks.diff-table.outputs.parameters.ids-to-delete-count}} > 0" }}'
            templateRef:
              name: {{ .Values.argoTemplates.softDeleteTable.name }}
              template: main
            arguments:
              parameters:
                - name: url
                  value: '{{ "{{inputs.parameters.url}}" }}'
                - name: dataset-id
                  value: '{{ "{{inputs.parameters.dataset-id}}" }}'
                - name: timeout
                  value: '{{ "{{inputs.parameters.timeout}}" }}'
                - name: sa-secret
                  value: '{{ "{{inputs.parameters.sa-secret}}" }}'
                - name: sa-secret-key
                  value: '{{ "{{inputs.parameters.sa-secret-key}}" }}'
                - name: gcs-bucket
                  value: '{{ "{{inputs.parameters.gcs-bucket}}" }}'
                - name: gcs-prefix
                  value: '{{ "{{inputs.parameters.gcs-prefix}}/old-ids/{{inputs.parameters.table-name}}" }}'
                - name: table-name
                  value: '{{ "{{inputs.parameters.table-name}}" }}'
          # Generate BQ tables for ClinGen
          # new rows
          - name: generate-new-rows-table
            dependencies: [diff-table]
            template: query-full-rows
            arguments:
              parameters:
                - name: bq-project
                  value: '{{ "{{inputs.parameters.staging-bq-project}}" }}'
                - name: bq-dataset
                  value: '{{ "{{inputs.parameters.staging-bq-dataset}}" }}'
                - name: join-table-name
                  value: '{{ "{{tasks.diff-table.outputs.parameters.join-table-name}}" }}'
                - name: table-name
                  value: '{{ "{{inputs.parameters.table-name}}" }}'
                - name: query-type
                  value: new_rows
          # updated rows
          - name: generate-updated-rows-table
            dependencies: [diff-table]
            template: query-full-rows
            arguments:
              parameters:
                - name: bq-project
                  value: '{{ "{{inputs.parameters.staging-bq-project}}" }}'
                - name: bq-dataset
                  value: '{{ "{{inputs.parameters.staging-bq-dataset}}" }}'
                - name: join-table-name
                  value: '{{ "{{tasks.diff-table.outputs.parameters.join-table-name}}" }}'
                - name: table-name
                  value: '{{ "{{inputs.parameters.table-name}}" }}'
                - name: query-type
                  value: updates
          # deleted rows
          - name: generate-deleted-rows-table
            dependencies: [diff-table]
            template: query-pk-deletes
            arguments:
              parameters:
                - name: bq-project
                  value: '{{ "{{inputs.parameters.staging-bq-project}}" }}'
                - name: bq-dataset
                  value: '{{ "{{inputs.parameters.staging-bq-dataset}}" }}'
                - name: join-table-name
                  value: '{{ "{{tasks.diff-table.outputs.parameters.join-table-name}}" }}'
                - name: table-name
                  value: '{{ "{{inputs.parameters.table-name}}" }}'
    # Subtemplates
    # query-full-rows will be generic for both the new rows + updates
    - name: query-full-rows
      inputs:
        parameters:
          - name: table-name
          - name: join-table-name
          - name: bq-project
          - name: bq-dataset
          - name: query-type
      {{- include "argo.retry" . | indent 6 }}
      script:
        image: {{ $schemaImage }}
        # layer of env variables to make the scripts more stand-alone and more compatible within editors
        env:
          - name: PROJECT
            value: '{{ "{{inputs.parameters.bq-project}}" }}'
          - name: DATASET
            value: '{{ "{{inputs.parameters.bq-dataset}}" }}'
          - name: INPUT_TABLE
            value: '{{ "{{inputs.parameters.join-table-name}}" }}'
          - name: TABLE
            value: '{{ "{{inputs.parameters.table-name}}" }}'
          - name: QUERY_TYPE
            value: '{{ "{{inputs.parameters.query-type}}" }}'
        command: [bash]
        source: |
        {{- include "argo.render-lines" (.Files.Lines "scripts/clingen-temp-table-full-rows.sh") | indent 10 }}

    # query-pk-deletes to get primary keys of rows to be deleted
    - name: query-pk-deletes
      inputs:
        parameters:
          - name: table-name
          - name: join-table-name
          - name: bq-project
          - name: bq-dataset
      {{- include "argo.retry" . | indent 6 }}
      script:
        image: {{ $schemaImage }}
        env:
          - name: PROJECT
            value: '{{ "{{inputs.parameters.bq-project}}" }}'
          - name: DATASET
            value: '{{ "{{inputs.parameters.bq-dataset}}" }}'
          - name: INPUT_TABLE
            value: '{{ "{{inputs.parameters.join-table-name}}" }}'
          - name: TABLE
            value: '{{ "{{inputs.parameters.table-name}}" }}'
        command: [bash]
        source: |
        {{- include "argo.render-lines" (.Files.Lines "scripts/clingen-temp-table-pk-deletes.sh") | indent 10 }}