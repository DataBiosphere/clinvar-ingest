apiVersion: argoproj.io/v1alpha1
kind: CronWorkflow
metadata:
  name: clinvar-ingest
spec:
  suspend: {{ not .Values.cron.enable }}
  schedule: {{ .Values.cron.schedule | quote }}
  timezone: {{ .Values.cron.timezone | quote }}
  concurrencyPolicy: Forbid
  workflowSpec:
    entrypoint: main
    serviceAccountName: {{ .Values.serviceAccount.k8sName }}
    podGC:
      strategy: OnWorkflowSuccess
    onExit: {{ if .Values.notification.onlyOnFailure }}send-slack-notification-if-failed{{ else }}send-slack-notification{{ end }}
    templates:
      ##
      ## Main entry-point to the regularly-run ClinVar ingest workflow.
      ##
      ## Delegates to a WorkflowTemplate for all of the business logic,
      ## to support easily running manual ingests.
      ##
      - name: main
        steps:
          - - name: run-main-template
              templateRef:
                name: ingest-clinvar-release-e2e
                template: main
              arguments:
                parameters:
                  - name: archive-path
                    value: weekly_release/ClinVarVariationRelease_00-latest_weekly.xml.gz
                  - name: gcs-prefix
                    value: {{ include "argo.timestamp" . | quote }}

      ##
      ## Send a Slack notifcation if the workflow has failed.
      ##
      - name: send-slack-notification-if-failed
        steps:
          - - name: send-notification
              template: send-slack-notification
              when: {{ "{{workflow.status}} != Succeeded" | quote }}

      ##
      ## Send a Slack notification describing the final status of the workflow.
      ##
      - name: send-slack-notification
        container:
          image: curlimages/curl:7.70.0
          env:
            - name: WORKFLOW_ID
              value: {{ "{{workflow.name}}" | quote }}
            - name: WORKFLOW_STATE
              value: {{ "{{workflow.status}}" | quote }}
            - name: WORKFLOW_ENV
              value: {{ .Values.jade.environment }}
            - name: SLACK_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.notification.slackUrl.secretName }}
                  key: {{ .Values.notification.slackUrl.secretKey }}
          command: [curl]
          args:
            - -XPOST
            - -H
            - 'Content-type: application/json'
            - -d
            - '{"text": "Workflow $(WORKFLOW_ID) in env *$(WORKFLOW_ENV)* entered state: $(WORKFLOW_STATE)"}'
            - $(SLACK_URL)
